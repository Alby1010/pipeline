version: 2

  

  deploy_to_master:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      
      - attach_workspace:
          at: /home/circleci
          
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
          
      - run: 
          name: Setup Google Cloud SDK
          command: |
            echo $GOOGLE_DM_CDS_DEV_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_DM_CDS_DEV_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_DM_CDS_DEV_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_DM_CDS_DEV_CLUSTER_NAME}
      - run: 
          name: Docker build and push 
          command: |
            IMAGE_TAG="training-1.${CIRCLE_BUILD_NUM}"
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://eu.gcr.io
            docker build -t training --build-arg configuration=training .
            docker tag training eu.gcr.io/${GOOGLE_DM_CDS_DEV_PROJECT_ID}/training:$IMAGE_TAG
            docker push eu.gcr.io/${GOOGLE_DM_CDS_DEV_PROJECT_ID}/training:$IMAGE_TAG
      - run: 
          name: Deploy to Kubernetes
          command: |
            IMAGE_TAG="training-1.${CIRCLE_BUILD_NUM}"
            kubectl set image deployment/admin-web admin-web=eu.gcr.io/${GOOGLE_DM_CDS_DEV_PROJECT_ID}/admin-web:$IMAGE_TAG
            kubectl rollout status deployment/training          


workflows:
  version: 2
  build_and_deploy:
    jobs:  
      - build-master:
          filters:
            branches:
              only:
              - master
      
